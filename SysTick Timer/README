In this second lab practice, additional functions were added to the scheduler implemented in lab #1: a function to place a task as blocked for a certain amount of time (ticks) and the implementation of a system tick timer, which enters a handler every time base (or every “tick”).

The scheduler must keep track of the time left for every blocked task to come back as ready, so, a software timer must be implemented for each possible task that could be created. Every time the system tick generates an interrupt, each timer with remaining counts must reduce its value by one, and whenever that time is up, the corresponding task must be placed back as ready.
